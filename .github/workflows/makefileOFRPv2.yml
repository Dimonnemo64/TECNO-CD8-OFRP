name: Make Recovery OFRPv2

on:
  workflow_dispatch:
    inputs:
      LIBRARY_NAME:
        description: 'LIBRARY_NAME'
        required: true
        default: 'omni'
      DEVICE_URL:
        description: 'DEVICE_URL'
        required: true
        default: 'https://github.com/Dimonnemo64/TECNO-CD8-OFRP.git'
      DEVICE_BRANCH:
        description: 'DEVICE_BRANCH'
        required: true
        default: 'main'
      DEVICE_URL_THEMS:
        description: 'DEVICE_URL_THEMS'
        required: true
        default: 'https://gitlab.com/OrangeFox/misc/theme.git'
      DEVICE_PATH_THEMS:
        description: 'DEVICE_PATH_THEMS'
        required: true
        default: 'bootable/recovery/gui/theme'
      DEVICE_BRANCH_THEMS:
        description: 'DEVICE_BRANCH_THEMS'
        required: true
        default: 'master'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/TECNO/CD8'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'CD8'
      DEVICE_TYPE:
        description: 'DEVICE_TYPE'
        required: true
        default: 'recovery'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-18.04
    
    steps:
    - name: Check Out
      uses: actions/checkout@main
      
    - name: Prepare the environment
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo apt -y autoremove --purge
        sudo apt -y autoclean
        sudo apt clean
        sudo apt update
        sudo apt -y install git aria2 git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip jq bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev imagemagick libbz2-dev libssl-dev lzma ncftp bash-completion python openjdk-8-jdk qemu-user-static
        git clone https://gitlab.com/OrangeFox/misc/scripts
        cd scripts
        sudo bash setup/android_build_env.sh
    - name: Set variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var
      
    - name: Initialize OFRP
      run: |
        PATH=~/bin:$PATH
        mkdir OrangeFox_10
        cd OrangeFox_10
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "Dimonnemo64"
        git config --global user.email "dimonnemo63@gmail.com"
        git clone https://github.com/Ctapchuk/OFRP_manifest_sync.git
        cd sync
        ./get_fox_10.sh
      id: pwd        
            
    - name: Clone device
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        git clone ${{ github.event.inputs.DEVICE_URL_THEMS }} -b ${{ github.event.inputs.DEVICE_BRANCH_THEMS }} ./${{ github.event.inputs.DEVICE_PATH_THEMS }}
        git clone ${{ github.event.inputs.DEVICE_URL }} -b ${{ github.event.inputs.DEVICE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
    - name: Building
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        export FOX_USE_TWRP_RECOVERY_IMAGE_BUILDER=1
        export LC_ALL="C"
#       lunch ${{ github.event.inputs.LIBRARY_NAME }}_${{ github.event.inputs.DEVICE_NAME }}-eng
        lunch ${{ github.event.inputs.LIBRARY_NAME }}_${{ github.event.inputs.DEVICE_NAME }}-eng && mka recoveryimage
#        mka clean
#        mka ${{ github.event.inputs.DEVICE_TYPE }}image -j$(nproc --all)
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.DEVICE_TYPE }}.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: Recovery for ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.OFRP }}
